name: test

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Set up the environment
        uses: ./.github/actions/setup-poetry-env
        with:
          poetry-options: --only check

      - name: Run check target
        run: make check

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11']
      fail-fast: false
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Set up the environment
        uses: ./.github/actions/setup-poetry-env
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run test target
        run: make test

      - name: "Upload coverage data"
        uses: actions/upload-artifact@v3
        with:
          name: coverage-data
          path: .coverage.*
          if-no-files-found: ignore

  coverage:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Set up the environment
        uses: ./.github/actions/setup-poetry-env
        with:
          python-version: "3.11"
          poetry-options: --only test

      - name: Download coverage data
        uses: actions/download-artifact@v3
        with:
          name: coverage-data

      - name: Run coverage target
        run: make coverage

      - name: Upload HTML report if check failed.
        uses: actions/upload-artifact@v3
        with:
          name: html-report
          path: htmlcov
        if: ${{ failure() }}

  docs:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Set up the environment
        uses: ./.github/actions/setup-poetry-env
        with:
          poetry-options: --with docs

      - name: Run docs target
        run: make docs
